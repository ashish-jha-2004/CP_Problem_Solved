#include <bits/stdc++.h>
using namespace std;

/*
****************************************************************************************************************************************************************************************************************************************************************************
    Author :- Ashish Jha
    Yug :- Kaliyug
****************************************************************************************************************************************************************************************************************************************************************************
    मनोबुद्ध्यहङ्कारचित्तानि नाहं न च श्रोत्रजिह्वे न च घ्राणनेत्रे ।
    न च व्योम भूमिर्न तेजो न वायुश्चिदानन्दरूपः शिवोऽहं शिवोऽहम् ॥१॥
    
    न च प्राणसंज्ञो न वै पञ्चवायुर्न वा सप्तधातुर्न वा पञ्चकोशाः ।
    न वाक्पाणिपादं न चोपस्थपायुश्चिदानन्दरूपः शिवोऽहं शिवोऽहम् ॥२॥
    
    न मे द्वेषरागौ न मे लोभमोहौ मदो नैव मे नैव मात्सर्यभावः ।
    न धर्मो न चार्थो न कामो न मोक्षश्चिदानन्दरूपः शिवोऽहं शिवोऽहम् ॥३॥
    
    न पुण्यं न पापं न सौख्यं न दुःखं न मन्त्रो न तीर्थं न वेदा न यज्ञाः ।
    अहं भोजनं नैव भोज्यं न भोक्ता चिदानन्दरूपः शिवोऽहं शिवोऽहम् ॥४॥  
    
    न मृत्युर्न शङ्का न मे जातिभेदः पिता नैव मे नैव माता न जन्म ।
    न बन्धुर्न मित्रं गुरुर्नैव शिष्यश्चिदानन्दरूपः शिवोऽहं शिवोऽहम् ॥५॥
    
    अहं निर्विकल्पो निराकाररूपो विभुत्वाञ्च सर्वत्र सर्वेन्द्रियाणाम् ।
    न चासङ्गतं नैव मुक्तिर्न मेयश्चिदानन्दरूपः शिवोऽहं शिवोऽहम् ॥६॥
****************************************************************************************************************************************************************************************************************************************************************************
*/

typedef long long ll;
typedef pair<int, int> pii;
#define en "\n"

void solve() {
    int n;
    cin >> n;
    vector<pii> events(n);
    vector<int> index(n);
    
    for (int i = 0; i < n; ++i) {
        cin >> events[i].first >> events[i].second;
        index[i] = i;
    }
    
    sort(index.begin(), index.end(), [&](int a, int b) {
        return events[a].first < events[b].first;
    });
    
    priority_queue<pii, vector<pii>, greater<pii>> pq;
    vector<int> room_allocations(n);
    int room_count = 0;
    
    for (int i = 0; i < n; ++i) {
        int start = events[index[i]].first;
        int end = events[index[i]].second;
        
        if (!pq.empty() && pq.top().first < start) {
            room_allocations[index[i]] = pq.top().second;
            pq.pop();
        } else {
            room_count++;
            room_allocations[index[i]] = room_count;
        }
        
        pq.push({end, room_allocations[index[i]]});
    }
    
    cout << room_count << en;
    for (int i = 0; i < n; ++i) {
        cout << room_allocations[i] << " ";
    }
    cout << en;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    solve();
    return 0;
}
